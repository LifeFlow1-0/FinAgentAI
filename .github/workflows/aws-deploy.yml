name: Deploy to AWS

on:
  push:
    branches:
      - main # Production
      - gamma # Staging
  workflow_dispatch: # Manual trigger

env:
  AWS_REGION: us-east-1 # Change as needed
  ECR_REPOSITORY: lifeflow
  ECS_CLUSTER: lifeflow-cluster
  ECS_SERVICE: lifeflow-service
  ECS_TASK_DEFINITION: lifeflow-task

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Validate environment
        run: |
          ENVIRONMENT=${{ github.ref == 'refs/heads/main' && 'prod' || 'gamma' }}
          test -f backend/config/$ENVIRONMENT/Dockerfile || exit 1
          test -f backend/config/$ENVIRONMENT/docker-compose.yml || exit 1

  deploy:
    needs: validate
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'gamma' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'prod' || 'gamma' }}
        run: |
          cd backend
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            -f config/$ENVIRONMENT/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Download task definition
        run: |
          aws ecs describe-task-definition \
            --task-definition ${{ env.ECS_TASK_DEFINITION }} \
            --query taskDefinition > task-definition.json

      - name: Update ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: lifeflow-app
          image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true

      - name: Health check
        run: |
          ENVIRONMENT=${{ github.ref == 'refs/heads/main' && 'prod' || 'gamma' }}
          URL="https://$ENVIRONMENT.lifeflow.app/health"
          for i in {1..30}; do
            if curl -s -f $URL; then
              exit 0
            fi
            sleep 10
          done
          exit 1
